Steps to Deploy HTML/CSS/Bootstrap/Tailwind Website:

1. Create a Server Directory
   mkdir server

2. Navigate to the Server Directory
   cd server

3. Initialize a Node.js Project and Install Express
   npm init -y && npm i express

4. Create a .gitignore File
   touch .gitignore

5. Modify package.json to Use Nodemon
   - Add "type": "module" in package.json.
   - Add script: "nodemon app.js".

6. Create app.js as a Simple Express Server

7. Check and Run the Server and Add Static File Serving
   - Modify the server to serve static files from the build folder.

8. Create a Build Folder and Add Required Files
   mkdir build && cd build && touch index.html style.css script.js

9. Run the Server and Test Instant Changes
   - Modify index.html, style.css, or script.js and verify updates instantly.

10. Completed Deployment of Static Website Using HTML, CSS, Bootstrap, and Tailwind

---

app.js Code:

import express from "express";
import path from "path"; // new line
import { fileURLToPath } from "url"; // new line

const __filename = fileURLToPath(import.meta.url); // new line
const __dirname = path.dirname(__filename); // new line

const app = express();
const PORT = 5003;

app.use(express.static(path.join(__dirname, "build"))); // new line

app.get("/suhail", (req, res) => {
    try {
        res.status(200).json({ message: "Hello, Suhail!" });
    } catch (error) {
        res.status(500).json({ message: error });
    }
});

// new 3 lines
app.get("*", (req, res) => {
    res.sendFile(path.join(__dirname, "build", "index.html"));
});

app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});
//////////////////////////////////////////////////////////////////////////////////























MERN App Deployment

1. Create a new repo / clone the repo

2. Navigate to the repo
   cd repoName

3. Create a server directory
   mkdir server

4. Create a Vite project with React and JavaScript
   npm create vite@latest ==> project name = client, react, javascript

5. Navigate to client directory, install dependencies, and run development server
   cd client && npm install && npm run dev

6. Delete unnecessary files:
   - eslintrc.config.js
   - Empty App.css and index.css

7. Modify main.jsx:
   - Remove Strict Mode and its import

8. Delete assets folder and all SVGs

9. Install Tailwind CSS with Vite
   npm install tailwindcss @tailwindcss/vite

10. Modify vite.config.js with the following:

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import tailwindcss from '@tailwindcss/vite'

// https://vite.dev/config/
export default defineConfig({
    plugins: [react(), tailwindcss()],
})

11. Modify index.css by adding:
   @import "tailwindcss";

12. Modify App.jsx:
   - Add `rafce`
   - Add "Hello World" or your project code

13. Check everything is working fine

14. Build the project:
   npm run build

15. A `dist` folder is generated

16. Move the `dist` folder to the `server` directory

17. Set up the server:
   mkdir server && cd server && npm init -y

18. Install Express:
   npm i express config

19. Create `.gitignore` file:
   touch app.js .gitignore

20. Modify `app.js` with the following code:

import express from "express";
import path from "path"; // new line
import { fileURLToPath } from "url"; // new line

const __filename = fileURLToPath(import.meta.url); // new line
const __dirname = path.dirname(__filename); // new line

const app = express();
const PORT = 5003;

app.use(express.static(path.join(__dirname, "dist"))); // new line

app.get("/suhail", (req, res) => {
    try {
        res.status(200).json({ message: "Hello, Suhail!" });
    } catch (error) {
        res.status(500).json({ message: error });
    }
});

// new 3 lines
app.get("*", (req, res) => {
    res.sendFile(path.join(__dirname, "dist", "index.html"));
});

app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});
git add .
git commit "htmlDeploy"
